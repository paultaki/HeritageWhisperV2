"use client";

import { useState } from "react";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Lightbulb, Check, X } from "lucide-react";

interface Step4_LessonProps {
  lessonLearned: string;
  transcript: string;
  onLessonChange: (lesson: string) => void;
}

/**
 * Step 4: Lesson Learned
 *
 * - Optional wisdom/lesson from the story
 * - Displayed as callout in book view
 */
export function Step4_Lesson({
  lessonLearned,
  transcript,
  onLessonChange,
}: Step4_LessonProps) {
  const [hasGenerated] = useState(!!lessonLearned); // Track if we started with a generated lesson
  const [isEditing, setIsEditing] = useState(false);

  const handleSkipLesson = () => {
    onLessonChange("");
    setIsEditing(false);
  };

  const handleEditLesson = () => {
    setIsEditing(true);
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-start gap-3">
        <div className="flex-shrink-0 w-12 h-12 rounded-full bg-amber-100 flex items-center justify-center">
          <Lightbulb className="w-6 h-6 text-amber-700" />
        </div>
        <div className="flex-1">
          <h3 className="text-xl font-medium mb-2">What did you learn from this experience?</h3>
          <p className="text-gray-600 text-base">
            {hasGenerated
              ? "We've generated a lesson suggestion based on your story. You can use it, edit it, or skip it entirely."
              : "Reflect on any wisdom or lessons from this story. This is completely optional but adds depth to your memory."}
          </p>
        </div>
      </div>

      {/* Generated Lesson Display (if not editing) */}
      {lessonLearned && !isEditing && (
        <div className="space-y-4">
          <div className="p-5 bg-gradient-to-br from-amber-50 to-orange-50 border-2 border-amber-300 rounded-lg">
            <p className="text-base font-semibold text-amber-900 mb-2 flex items-center gap-2">
              <Lightbulb className="w-5 h-5" />
              {hasGenerated ? "Generated by Whisper Storyteller" : "Your Lesson:"}
            </p>
            <p className="text-lg text-amber-900 italic leading-relaxed">
              "{lessonLearned}"
            </p>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row gap-3">
            <Button
              onClick={handleEditLesson}
              variant="outline"
              size="lg"
              className="flex-1 border-2"
            >
              Edit Lesson
            </Button>
            <Button
              onClick={handleSkipLesson}
              variant="outline"
              size="lg"
              className="flex-1 border-2 text-gray-600 hover:bg-gray-50"
            >
              <X className="w-4 h-4 mr-2" />
              Skip Lesson
            </Button>
          </div>

          <p className="text-base text-gray-600 text-center">
            Click "Save Story" below to save with this lesson, or skip to save without one.
          </p>
        </div>
      )}

      {/* Editing Mode (or no lesson yet) */}
      {(!lessonLearned || isEditing) && (
        <div className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="lesson-learned" className="text-base font-medium">
              Lesson Learned (Optional)
            </Label>
            <Textarea
              id="lesson-learned"
              value={lessonLearned}
              onChange={(e) => onLessonChange(e.target.value)}
              className="min-h-[150px] text-base leading-relaxed"
              placeholder="Example: I learned that true courage isn't the absence of fear, but choosing to act despite it."
              maxLength={500}
            />
            {lessonLearned.length > 0 && (
              <p className="text-sm text-gray-500">{lessonLearned.length} / 500 characters</p>
            )}
          </div>

          {/* Action Buttons (editing mode) */}
          {isEditing && (
            <div className="flex gap-3">
              <Button
                onClick={() => setIsEditing(false)}
                size="lg"
                className="flex-1 bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600"
                disabled={!lessonLearned.trim()}
              >
                <Check className="w-4 h-4 mr-2" />
                Keep This Lesson
              </Button>
              <Button
                onClick={handleSkipLesson}
                variant="outline"
                size="lg"
                className="flex-1"
              >
                <X className="w-4 h-4 mr-2" />
                Skip Lesson
              </Button>
            </div>
          )}
        </div>
      )}

      {/* Preview (when editing and has content) */}
      {lessonLearned.trim() && isEditing && (
        <div className="p-4 bg-amber-50 border-l-4 border-amber-500 rounded-r-lg">
          <p className="text-base font-medium text-amber-900 mb-1">Preview:</p>
          <p className="text-base text-amber-800 italic leading-relaxed">
            "{lessonLearned.trim()}"
          </p>
        </div>
      )}

      {/* Help Text */}
      <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <p className="text-base text-blue-800 mb-2">
          <strong>This is optional!</strong> You can skip this step and save your story without a
          lesson.
        </p>
        <p className="text-base text-blue-800">
          If you add one, it will appear as an elegant callout at the end of your story in the book
          view.
        </p>
      </div>

      {/* Examples */}
      <div className="border border-gray-200 rounded-lg p-4">
        <p className="text-base font-medium text-gray-700 mb-3">Example lessons:</p>
        <div className="space-y-2 text-base text-gray-600">
          <p className="italic">
            "Family time is more valuable than any possession. Those Sunday dinners together were
            the real treasure."
          </p>
          <p className="italic">
            "Sometimes the scariest decisions lead to the most rewarding chapters of our lives."
          </p>
          <p className="italic">
            "Hard work and perseverance can overcome almost any obstacle, but knowing when to ask
            for help is equally important."
          </p>
        </div>
      </div>
    </div>
  );
}
